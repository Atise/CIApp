/*
var Jobs = require('jenkins-job-builder-js');

var helloWorld = new Jobs();

helloWorld
    .defaults()
        .name('global')
        .projectType('freestyle')
        .concurrent(true)
        .description('Description of job here')
        .disabled(false)
        .quietPeriod(5)
        .blockDownstream(false)
        .blockUpstream(false)
        .retryCount(3)
        .triggers()
            .pollscm()
                .cron('* * * * *')
        .scm()
            .git()
                .url('{git-repo}')
                .clean()
                    .after(true)
                .repoDepth('infinity')
                .wipeWorkspace(true)
                .gitConfigName('{git-config-name}')
                .gitConfigEmail('{git-config-email}')
    .jobTemplate()
        .name('{name}-maven-build')
        .node('master')
        .builders()
            .mavenTarget()
                .mavenVersion('Maven3')
                .pom('pom.xml')
                .goals('clean package findbugs:findbugs checkstyle:checkstyle')
            .mavenBuilder()
                .name('mvn3')
                .pom('pom.xml')
                .goals('clean project')
        .properties()
            .github()
                .url('{git-repo}')
        .triggers()
            .github()
            .pollscm()
                .cron('* * * * *')
        .publishers()
            .checkstyle()
                .pattern('**!/checkstyle-result.xml')
                .healthy(0)
                .unhealthy(100)
                .healthThreshold('high')
                .thresholds()
                    .unstable()
                        .totalHigh(10)
                    .failed()
                        .totalHigh(1)
            .findbugs()
                .pattern('**!/findbugs.xml')
                .rankPriority(true)
                .includeFiles('f,d,e,.*')
                .excludeFiles('a,c,d,.*')
                .canRunOnFailed(true)
                .shouldDetectModules(true)
                .healthy(80)
                .unhealthy(10)
                .useDeltaValues(true)
                .healthThresgold('high')
                .thresholds()
                    .unstable()
                        .totalAll(90)
                        .totalHigh(80)
                        .totalNormal(50)
                        .totalLow(20)
                        .newAll(95)
                        .newHigh(85)
                        .newNormal(55)
                        .newLow(25)
                    .failed()
                        .totalAll(80)
                        .totalHigh(70)
                        .totalNormal(40)
                        .totalLow(10)
                        .newAll(85)
                        .newHigh(75)
                        .newNormal(45)
                        .newLow(15)
                .dontComputeNew(false)
                .useDeltaValues(true)
                .usePreviousBuildAsReference(true)
                .useStableBuildAsReference(true)
    .project()
        .name('java1')
        .jobs()
            .('{name}-maven-build')
                .gitRepo('https://github.com/MattiasC86/MavenProject2/')
                .gitConfigName('Test name')
                .gitConfigEmail('Test email')

console.log(JSON.stringify(helloWorld.array, null, 2));*/
